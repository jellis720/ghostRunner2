<link rel="stylesheet" href="/styles.css">
<header class="header_bar">

  <a href="/"><img src="/ghost.png" alt="ghostrunner" class="main_logo"></a>


</header>

<nav class="navigation">
    <a class="button" href="/profile">Scoreboard</a>
    <a class="button" href="/snippetlist">My Time</a>
    <a class="button" href="/addsnippet">Add Time</a>
    <a href="/logout">Logout</a>
</nav>
<h1 id="add_task">Add Time</h1>


<div class="form">
  <h4>Click the map below to find the closest trails!</h4>
  <div id="mapIntegration">
  <iframe src="//www.google.com/maps/embed/v1/place?q=trails+nearme
  &zoom=10
  &key=AIzaSyCtryTRUGTnlqy4_XGaCi9LqxE5g4CQxF4">
  </iframe>
  </div>

  <div id="stopWatch">
  <nav class="controls">
  			<a href="#stopWatch" class="watchbutton" onClick="stopwatch.start();">Start</a>
  			<a href="#stopWatch" class="watchbutton" onClick="stopwatch.lap();">Lap</a>
  			<a href="#stopWatch" class="watchbutton" onClick="stopwatch.stop();">End Run</a>
  			<a href="#stopWatch" class="watchbutton" onClick="stopwatch.reset();">Reset Timer (Press Start)</a>
  			<a href="#stopWatch" class="watchbutton" onClick="stopwatch.clear();">Clear Lap Time</a>
  		</nav>
  		<div class="stopwatch"></div>
      <h5>To calculate your run, press "Start" above. This will begin timing. When you complete your 5K, hit "End Run" to stop the timer. Fill in your name below and your time will automatically be added to the scoreboard!</h5>
      <h4>Run Time<ul class="results"></ul></h4>


      <script>class Stopwatch {
      constructor(display, results) {
          this.running = false;
          this.display = display;
          this.results = results;
          this.laps = [];
          this.reset();
          this.print(this.times);
      }

      reset() {
          this.running = false;
          this.time = null;
          this.times = [ 0, 0, 0 ];
          this.running = false;
          this.time = null;
      }

      start() {
          if (!this.time) this.time = performance.now();
          if (!this.running) {
              this.running = true;
              requestAnimationFrame(this.step.bind(this));
          }
      }

      lap() {
          let times = this.times;
          let li = document.createElement('li');
          li.innerText = this.format(times);
          this.results.appendChild(li);
      }

      stop() {
          this.running = false;
          this.time = null;
          let times = this.times;
          let li = document.createElement('li');
          let res = document.querySelector("#results");
          res.value = this.format(times);
          li.innerText = this.format(times);
          this.results.appendChild(li);
      }

      restart() {
          if (!this.time) this.time = performance.now();
          if (!this.running) {
              this.running = true;
              requestAnimationFrame(this.step.bind(this));
          }
          this.reset();
      }

      clear() {
          clearChildren(this.results);
      }

      step(timestamp) {
          if (!this.running) return;
          this.calculate(timestamp);
          this.time = timestamp;
          this.print();
          requestAnimationFrame(this.step.bind(this));
      }

      calculate(timestamp) {
          var diff = timestamp - this.time;
          // Hundredths of a second are 100 ms
          this.times[2] += diff / 10;
          // Seconds are 100 hundredths of a second
          if (this.times[2] >= 100) {
              this.times[1] += 1;
              this.times[2] -= 100;
          }
          // // Minutes are 60 seconds
          if (this.times[1] >= 60) {
              this.times[0] += 1;
              this.times[1] -= 60;
          }
      }

      print() {
          this.display.innerText = this.format(this.times);
      }

      format(times) {
          return `\
  ${pad0(times[0], 2)}:\
  ${pad0(times[1], 2)}:\
  ${pad0(Math.floor(times[2]), 2)}`;
      }
  }

  function pad0(value, count) {
      var result = value.toString();
      for (; result.length < count; --count)
          result = '0' + result;
      return result;
  }

  function clearChildren(node) {
      while (node.lastChild)
          node.removeChild(node.lastChild);
  }

  let stopwatch = new Stopwatch(
      document.querySelector('.stopwatch'),
      document.querySelector('.results'));

  </script>
  </div>
<form class="data_form" action="/saveSnippet" method="post">
  <input type="text" id="name" name="title" value="{{user.name}}" placeholder="Name (First/Last)" />
  <div class="fieldError">{{errors.title.message}}</div>
  <br />

  <input type="text" id="results" name="body" class="hide" value="{{snippet.body}}" placeholder="Enter Run Time Here"></textarea>
  <div class="fieldError">{{errors.body.message}}</div>
  <br />

  {{#if snippet._id}}
    <input type="hidden" name="id" value="{{snippet._id}}" />
  {{/if}}
  <button class="button-primary">Save Time</button>
</form>
</div>

<footer>
  <p> MTJMGhostRunner</p>
  <a class="donationLink" href="https://www.flipcause.com/widget/widget_home/MTgzMzY=">Donate</a>
</footer>
